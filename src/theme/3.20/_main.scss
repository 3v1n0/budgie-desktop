$roundness: 3px;
$border_width: if($variant == 'default', 1px, 2px);
$pos_list: ((top, bottom),(bottom,top),(left,right),(right,left));
$asset_suffix: if($variant == 'default', '', '-hc');

// Container for both the "panel" area and the shadow. Wise to keep
// this transparent..
.budgie-container { background-color: transparent; }

*:drop(active):focus,
*:drop(active) {
    box-shadow: inset 0 0 0 1px #F08437;
}

// Used to reset all style properties set by the gtk theme
popover list,
popover row,
.budgie-popover .container,
.budgie-popover list,
.budgie-popover row {
    @extend %reset_style
}

%reset_style,
 menubar {
    menuitem {
        @include menu_reset_style(label,disabled);
    }
}

// Worskpace Switcher
@include workspaces(frame,button);

// Budgie Menu
.budgie-menu {
    @include budgie-menu('icon-effect', 'entry.search', 'image', 'disabled', 
                         'label', 'undershoot', 'overshoot');
    button:not(.category-button) { padding-top: 5px; padding-bottom: 5px; }
}

// Menu Button
@include budgie_menu_button('button');

// User Menu
@include budgie_user_menu(separator, 'background-color');

// Places Menu
@include places_menu(button, list, row, entry);

// Panel
.budgie-panel {
    @include budgie_panel(button, separator, 'background-color');
}

// Tasklist
.budgie-panel #tasklist-button,
.budgie-panel #tasklist-button:backdrop {
    @extend %budgie_panel_tasklist;
    outline-color: transparent;
    &:drop(active) { box-shadow: inset 0 0 0 1px $selected_bg_color; }
}

// Budgie styled Gtk Menus
.budgie-menubar {
    @include budgie_menubar(menu, arrow, menuitem, accelerator);
    arrow {
        min-width:16px;
        min-height:16px;
    }

    menuitem {
        check, radio {
            min-height: 16px;
            min-width: 16px;
        }
    }
}

// Session Dialog
.budgie-session-dialog {
    @extend %widgets;
    @include budgie_session_dialog(button);

    color: $fg_color;
    background-color: $panel_bg;

    decoration {
        border-radius: 1px;
        box-shadow: 0 2px 4px 0 $panel_shadow, 0 0 0 1px $panel_border;
    }
}

// Run Dialog
.budgie-run-dialog {
    @extend .budgie-session-dialog;

    entry.search, entry.search:focus {
        @extend %budgie_run_dialog_entry;

        image {
            @extend %budgie_run_dialog_image;
        }
    }

    list row:selected .dim-label { opacity: 1; }

    scrolledwindow { border-top: 1px solid darken($entry_border, 5%); }
}

// Alt+tab switcher in Budgie
.budgie-switcher-window {
    @extend .budgie-notification-window;

    // Flowbox
    flowbox { color: $fg_color; }
    flowboxchild {
        @include budgie_switcher_child(disabled, label); 
    }
}

// Icon Tasklist
.budgie-panel {
    @include icon_tasklist('button.flat');

    button.flat.launcher {
        @extend %reset_style;
        outline-color: transparent;
        border-radius: 0;
    }
}

// Underscores
%underscores {
    @include underscores('button.flat');
}

// Panel Borders
@include borders($pos_list);

// Raven
.raven {
    @include raven(button);
    .raven-header {
        min-height: 32px;
    }
}
@include raven-trigger(button);
@include raven-mpris(button);

@each $pos, $b_pos in $pos_list {
    // Raven borders
    .#{$pos} .raven-frame {
        border {
            border: none;
            border-#{$b_pos}: $border_width solid $raven_border;
        }
    }
}