@function gtkalpha($c,$a) {
    @return unquote("alpha(#{$c},#{$a})");
}

$roundness: 3px;
$border_width: if($variant == 'default', 1px, 2px);
$pos_list: ((top, bottom),(bottom,top),(left,right),(right,left));
$asset_suffix: if($variant == 'default', '', '-hc');

// Used to reset all style properties set by the gtk theme
popover list,
popover row,
.budgie-popover list,
.budgie-popover row {
    @extend %reset_style
}

%reset_style,
 menubar {
    menuitem {
        @include menu_reset_style(label);
    }
}

// Container for both the "panel" area and the shadow. Wise to keep
// this transparent..
.budgie-container { background-color: transparent; }

*:drop(active):focus,
*:drop(active) {
    box-shadow: inset 0 0 0 1px #F08437;
}

@include workspaces(frame,button);

.budgie-popover .container > border {
    @extend %reset_style;
}

// Budgie Menu
.budgie-menu {
    @include budgie-menu('icon-effect', 'entry.search', 'image', 'disabled', 
                         'label', 'undershoot', 'overshoot');
    button:not(.category-button) { padding-top: 5px; padding-bottom: 5px; }
}

// Menu Button
@include budgie_menu_button('button');

// User Menu
@include budgie_user_menu(separator, 'background-color');

// Places Menu
@include places_menu(button, list, row, entry);

// Panel
.budgie-panel {
    @include budgie_panel(button, separator, 'background-color');
}

// Tasklist
.budgie-panel #tasklist-button,
.budgie-panel #tasklist-button:backdrop {
    @extend %budgie_panel_tasklist;
    outline-color: transparent;
    &:drop(active) { box-shadow: inset 0 0 0 1px $selected_bg_color; }
}

// Budgie styled Gtk Menus
.budgie-menubar {
    @extend %menu;
    menu {
        @extend %budgie_menubar_menu;
    }

    arrow {
        @extend %budgie_menubar_arrow;
        min-width:16px;
        min-height:16px;
    }

    menuitem {
        accelerator {
            @extend %budgie_menubar_accelerator;
        }

        check, radio {
            min-height: 16px;
            min-width: 16px;
        }
    }
}
