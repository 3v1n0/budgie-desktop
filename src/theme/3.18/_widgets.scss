%widgets {

    * {
        padding: 0;
        outline-color: transparentize($fg_color, 0.7);
        outline-style: dashed;
        outline-offset: -3px;
        outline-width: 1px;
        outline-radius: 2px;

        @extend %reset_style;
    }

    .dim-label { opacity: 0.55; }
    .label:insensitive { color: transparentize($fg_color, 0.65); }
    .separator { color: rgba(0,0,0,0.25); }
    .cell { color: $fg_color; }
    GtkLabel, GtkImage { color: inherit; }

    // used to indicate unread notifications
    .alert { color: $alert_color; }

    // Entries
    .entry {
        padding: 4px 8px;
        border: $border_width solid;
        border-radius: $roundness;

        @extend %entry;

        &:selected,
        &:selected:focus {
            color: $selected_fg_color;
            background-color: $selected_bg_color;
        }
    }

    // Buttons
    .button {
        @include widget_button(insensitive,'.label');
    }

    // Linked Widgets
    @include widget_linked('.entry','.button');

    // ComboBoxes
    GtkComboBox.combobox-entry {
        .entry {
            &:dir(ltr) {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
            }
            &:dir(rtl) {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
            }
        }
        .button {
            &:dir(ltr) {
                border-top-left-radius: 0;
                border-bottom-left-radius: 0;
                border-left-style: none;
            }
            &:dir(rtl) {
                border-top-right-radius: 0;
                border-bottom-right-radius: 0;
                border-right-style: none;
            }
        }
    }

    // Spinbuttons
    .spinbutton {
        border-radius: $roundness;

        .button {
            border-color: transparentize($button_border, 0.3);
            border-style: none none none solid;
            border-radius: 0;

            &:dir(rtl) { border-style: none solid none none; }
        }
    }

    // Progressbars
    @include widget_progressbar(GtkProgressBar,'&.progressbar','&.trough');

    // Scale
    .scale {
        -GtkScale-slider-length: 16;
        -GtkRange-slider-width: 16;
        -GtkRange-trough-border: 0;
        outline-offset: -1px;
        outline-radius: 2px;
        outline-color: transparentize($fg_color, 0.7);

        color: gtkalpha(currentColor, 0.7);

        &:insensitive { opacity: 0.4; }

        &.slider {
            border-radius: 50%;

            @if $variant == 'default' {
                background-image: -gtk-scaled(url("../assets/scale-slider.png"),url("../assets/scale-slider@2.png"));
            }
            @else {
                background-color: $selected_bg_color;
            }

            &:hover { background: $selected_bg_color; }
        }
        &.trough {
            margin: 5px;
            background-color: $trough_bg;
            border-radius: 2.5px;

            &.highlight { background-color: $selected_bg_color; }
        }
    }

    // Check and Radio Items
    @each $w,$a in ('check', 'checkbox'),
                   ('radio','radio') {
      .#{$w} {
        color: $fg_color;
        -gtk-icon-source: if($variant == 'default', -gtk-scaled(url("../assets/#{$a}.png"),url("../assets/#{$a}@2.png")),
                                                    -gtk-icontheme('#{$a}-symbolic'));

        &:checked, &:active {
            -gtk-icon-source: if($variant == 'default', -gtk-scaled(url("../assets/#{$a}-active.png"),url("../assets/#{$a}-active@2.png")),
                                                        -gtk-icontheme('#{$a}-checked-symbolic'));
        }
        &:insensitive { color: transparentize($fg_color, 0.65); }
        &:inconsistent { -gtk-icon-source: -gtk-icontheme('#{$a}-mixed-symbolic'); }
      }
    }

    // Switches
    GtkSwitch {
        font: 1;
        -GtkSwitch-slider-width: 45;
        -GtkSwitch-slider-height: 19;
        outline-color: transparent;

        &:insensitive { opacity: 0.4; }

        &.trough, &.slider {
            color: transparent;
            background-size: 45px 19px;
            background-repeat: no-repeat;
            background-position: right center;

            &:dir(rtl) { background-position: left center; }
        }
        &.trough {
            background-image: -gtk-scaled(url("../assets/switch#{$asset_suffix}.png"),url("../assets/switch#{$asset_suffix}@2.png"));

            &:active { background-image: -gtk-scaled(url("../assets/switch-active#{$asset_suffix}.png"),url("../assets/switch-active#{$asset_suffix}@2.png")); }
        }
    }

    // Scrollbars
    .scrollbar {
        @include widget_scrollbar('.button', '.slider', '.trough', 'prelight', 'insensitive');

        -GtkRange-slider-width: 13;
        -GtkRange-trough-border: 0;
        -GtkScrollbar-min-slider-length: 42;
        -GtkRange-stepper-spacing: 0;
        -GtkRange-trough-under-steppers: 1;

        $_slider_margin: 3px;
        $_slider_fine_tune_margin: 4px;

        &.overlay-indicator {
            &:not(.dragging):not(.hovering) {
                -GtkRange-slider-width: 6px;

                .slider {
                    margin: $_slider_margin - 1px 0;
                }
            }
        }
        &.fine-tune .slider { margin: $_slider_fine_tune_margin; }
    }

    // Lists
    .list { color: $fg_color; }
    .list-row.activatable {
        padding: 3px;
        color: $fg_color;

        &:hover { background-color: $button_bg; }
        &:active { color: $fg_color; }
        &:selected {
            color: $selected_fg_color;
            background-color: $selected_bg_color;

            &:active { color: $selected_fg_color; }
            &:hover { background-color: mix(black, $selected_bg_color, 10%); }
            &:insensitive {
                color: transparentize($selected_fg_color, 0.3);
                background-color: transparentize($selected_bg_color, 0.3);
                .label { color: inherit; }
            }
        }
    }
    @at-root %menu {
        .menu {
            .cell { color: inherit; }

            margin: 4px;
            padding: 0;
            border-radius: 0;
            background-color: $raven_bg;

            .menuitem {
                padding: 5px;
                color: $fg_color;
                &:hover {
                    color: $selected_fg_color;
                    background-color: $selected_bg_color;
              }
              &:insensitive { color: transparentize($fg_color, 0.65); }
              &.separator { color: transparentize($raven_bg, 1); }
            }
            &.button {
                border: none;
                &:hover { background-color: $selected_bg_color; }
                &:insensitive {
                    color: transparentize($fg_color, 0.65);
                    background-color: transparent;
                }
            }
        }
        .window-frame.csd.popup {
            box-shadow: 0 3px 6px transparentize(black, 0.55),
                        0 0 0 1px transparentize(black, 0.55);
        }
    }

    // Calendar
    @include widget_calendar(GtkCalendar,inconsistent);
}

.drop-shadow {
    @extend %widgets;

    color: $fg_color;
    background-color: $panel_bg;
    box-shadow: 0 2px 4px 0 $panel_shadow, 0 0 0 1px $panel_border;
    border-radius: 1px;
}