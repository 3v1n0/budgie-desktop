@function gtkalpha($c,$a) {
    @return unquote("alpha(#{$c},#{$a})");
}

$roundness: 3px;
$border_width: if($variant == 'default', 1px, 2px);
$pos_list: ((top, bottom),(bottom,top),(left,right),(right,left));
$asset_suffix: if($variant == 'default', '', '-hc');

// Container for both the "panel" area and the shadow. Wise to keep
// this transparent..
.budgie-container { background-color: transparent; }

*:drop(active):focus,
*:drop(active) {
    box-shadow: inset 0 0 0 1px #F08437;
}

// Used to reset all style properties set by the gtk theme
GtkPopover GtkListBox,
GtkPopover GtkListBoxRow,
.budgie-popover GtkListBox,
.budgie-popover GtkListBoxRow {
    @extend %reset_style;
}

%reset_style,
 GtkMenuBar {
    GtkMenuItem {
        @include menu_reset_style(GtkLabel);
    }
}

// Workspace Switcher
@include workspaces();

// Budgie Menu
.budgie-menu {
    @include budgie-menu('image-effect', 'GtkSearchEntry.entry:not(:selected)', '&.image',
                         'insensitive', 'GtkLabel', '.undershoot', '.overshoot');
}

// Menu Button
@include budgie_menu_button('.button');

// User Menu
@include budgie_user_menu(GtkSeparator, 'color');

// Places Menu
@include places_menu('.button', GtkListBox, GtkListBoxRow, '.entry');

// Panel
.budgie-panel {
    @include budgie_panel('.button', '.separator', color);

    .button {
        padding-top: 0;
        padding-bottom: 0;

        .top & {
            padding-top: 1px;
            border-bottom: 1px solid transparentize($panel_bg, 1);
        }
        .bottom & {
            padding-bottom: 1px;
            border-top: 1px solid transparentize($panel_bg, 1);
        }
    }
}

// Tasklist
.budgie-panel WnckTasklist .button,
.budgie-panel WnckTasklist .button:backdrop {
    @extend %budgie_panel_tasklist;
}

// Budgie styled Gtk Menus
.budgie-menubar {
    @include budgie_menubar(GtkMenu, GtkArrow, GtkMenuItem, GtkMenuAccelerator);
}

// Session Dialog
.budgie-session-dialog {
    @include budgie_session_dialog('.button');
    &.background { @extend .drop-shadow; }
}

// Run Dialog
.budgie-run-dialog.background {
    @extend .drop-shadow;

    GtkSearchEntry.entry,
    GtkSearchEntry.entry:focus {
        @extend %budgie_run_dialog_entry;
        &.image {
            @extend %budgie_run_dialog_image;
            color: currentColor;
        }
    }

    .list .list-row:selected .dim-label { opacity: 1; }

    GtkScrolledWindow { border-top: 1px solid darken($entry_border, 5%); }

    .undershoot, .overshoot { border: none; }
}

// Alt+tab switcher in Budgie
// Alt+tab switcher in Budgie
.budgie-switcher-window {
    @extend .budgie-notification-window;

    // Lists
    GtkFlowBox {
        padding: 0px;
        margin: 0px;
        color: $fg_color;
    }
    GtkFlowBoxChild {
        @include budgie_switcher_child(insensitive, '.label');
        margin: 0px;
    }
}

// Icon Tasklist
.budgie-panel {
    @include icon_tasklist('');
}

// Underscores
%underscores {
    @include underscores('');
}

// Panel Borders
@include borders($pos_list); 

// Raven
.raven {
    @include raven('.button');
}
@include raven-trigger('.button');
@include raven-mpris('.button');

@each $pos, $b_pos in $pos_list {
    // Raven borders
    .#{$pos} .raven-frame {
        border: none;
        border-#{$b_pos}: $border_width solid $raven_border;
    }
}